<?xml version="1.0" encoding="UTF-8"?>
<sequence
        name="com.wso2telco.dep.common.msisdnValidation.service.Sequence" xmlns="http://ws.apache.org/ns/synapse">
    <property expression="json-eval($.msisdnList)" name="MSISDN"
              scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
    <property expression="fn:normalize-space($ctx:MSISDN)" group="1"
              name="MSISDN" pattern="((^(?!null).*$)|(^(null).+$))"
              scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
    <filter xmlns:ns="http://org.apache.synapse/xsd" xpath="not(boolean($ctx:MSISDN))">
        <then>
            <property name="httpStatusCode" scope="default"
                      type="STRING" value="400"/>
            <property name="messageId" scope="default" type="STRING" value="SVC0001"/>
            <property name="exceptionType" scope="default" type="STRING" value="SERVICE_EXCEPTION"/>
            <property name="errorText" scope="default" type="STRING" value="Missing mandatory parameter: msisdnList"/>
            <sequence key="com.wso2telco.dep.common.response.exceptions.Sequence"/>
        </then>
        <else/>
    </filter>
    <log level="custom">
        <property expression="$ctx:MSISDN" name="log1" xmlns:ns="http://org.apache.synapse/xsd"/>
    </log>

    <class name="org.wso2telco.dep.nashornmediator.NashornMediator">
        <property name="script" value="
     var payload = mc.getPayloadJSON();
     var isArray = Array.isArray(payload.msisdnList);
     mc.setProperty('isArray', isArray);
   "/>
    </class>

    <filter regex="^false" source="$ctx:isArray">
        <then>
            <property name="httpStatusCode" scope="default"
                      type="STRING" value="400"/>
            <property name="messageId" scope="default" type="STRING" value="SVC0001"/>
            <property name="exceptionType" scope="default" type="STRING" value="SERVICE_EXCEPTION"/>
            <property name="errorText" scope="default" type="STRING" value="Input format must be Json Array!"/>
            <sequence key="com.wso2telco.dep.common.response.exceptions.Sequence"/>
        </then>
    </filter>

    <class name="com.wso2telco.dep.oneapivalidation.util.ValidationMediator"/>

    <filter regex="^true$" source="$ctx:INTERNAL_ERROR">
    <then>
        <sequence key="com.wso2telco.dep.common.response.exceptions.Sequence"/>
    </then>
    </filter>

    <log level="custom">
        <property expression="$ctx:validMsisdns"
                  name="----------valid-------" xmlns:ns="http://org.apache.synapse/xsd"/>
    </log>
    <log level="custom">
        <property expression="$ctx:invalidMsisdns"
                  name="------invalid--------" xmlns:ns="http://org.apache.synapse/xsd"/>
    </log>
    <payloadFactory media-type="json">
        <format>
            {
            "valid": $1,
            "invalid": $2,
            "validationRegex": "$3"
            }
        </format>
        <args>
            <arg evaluator="xml" expression="$ctx:validMsisdns" xmlns:ns="http://org.apache.synapse/xsd"/>
            <arg evaluator="xml" expression="$ctx:invalidMsisdns" xmlns:ns="http://org.apache.synapse/xsd"/>
            <arg evaluator="xml" expression="$ctx:validationRegex" xmlns:ns="http://org.apache.synapse/xsd"/>
        </args>
    </payloadFactory>
    <respond/>
</sequence>
